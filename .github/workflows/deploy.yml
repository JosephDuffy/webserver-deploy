name: Deploy

on:
  push:
  repository_dispatch:
    types: [deploy]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          if [[ -d "josephduffy.co.uk" ]]; then
            cd josephduffy.co.uk || exit
            git pull
            cd ..
          else
            git clone --single-branch --branch master https://github.com/JosephDuffy/josephduffy.co.uk.git
          fi

          if [[ -d "webserver-deploy" ]]; then
            cd webserver-deploy || exit
            git pull
          else
            git clone https://github.com/JosephDuffy/webserver-deploy.git
            cd webserver-deploy || exit
          fi

          TEMP_DIR=$(mktemp -d)

          function cleanup {
            rm -r "$TEMP_DIR"
          }

          cd "$TEMP_DIR" || exit

          trap cleanup EXIT

          git clone --depth 1 https://github.com/JosephDuffy/josephduffy.co.uk.git
          git clone --depth 1 https://github.com/JosephDuffy/webserver-deploy.git
          cd webserver-deploy || exit

          mkdir -p /data/docker

          mkdir /data/docker/nginx
          mkdir /data/docker/nginx/logs
          touch /data/docker/nginx/logs/access.log
          mkdir /data/docker/nginx/sites
          cp nginx/nginx.conf /data/docker/nginx
          rm /data/docker/nginx/sites/*
          cp nginx/sites/* /data/docker/nginx/sites

          mkdir /data/docker/goaccess

          mkdir /data/docker/letsencrypt

          if [[ -f ~/.config/stats.josephduffy.co.uk/.htaccess ]]; then
            cp ~/.config/stats.josephduffy.co.uk/.htaccess /data/docker/nginx/.htpasswd
          else
            >&2 echo "No htaccess file found"
            exit 1
          fi

          env GITHUB_ACCESS_TOKEN="$GITHUB_ACCESS_TOKEN" docker-compose build --no-cache website
          env GITHUB_ACCESS_TOKEN="$GITHUB_ACCESS_TOKEN" docker-compose up --detach --build
          docker exec nginx nginx -s reload
